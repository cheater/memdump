#!/bin/sh

# $1 - PID of process to dump memory of
# $2 - optional - file name for dump

nums_only=$(echo "$1" | grep -v '[^0-9]')
if [ -z "$1" ] || [ "$nums_only" != "$1" ] || ! [ "$1" -gt 0 ]; then
  echo "Incorrect PID: '$1'"
  exit 1
  fi

if ! [ -f "/proc/$1/maps" ]; then
  echo "/proc/$1/maps: No such file or directory"
  exit 1
  fi

maps=$(cat /proc/"$1"/maps)
[ "$maps" ] || echo "No maps to select from" && exit 0

map=$(echo "$maps" | percol)

filename="$1"
map_name=$(echo "$map" | awk '{print $6}' | sed -e 's|/|--|g')
[ "$map_name" ] && filename="$filename.$map_name"
filename="$filename.mem"

if [ -n "$2" ]; then
  filename="$2"
  fi

echo "Writing memory to file: '$filename'"

if [ -f "$filename" ]; then
  printf "Will overwrite $filename, press Enter to continue"
  tty_settings=$(stty -g)
  cleanup () {
    stty "$tty_settings"
    }
  trap cleanup 1 2 3 6 14 15
  stty -echo
  read key # $key is never used, but must be given to read because POSIX
  cleanup
  echo
  fi

IFS=' -' read -r start stop _ <<EOF
$map
EOF

gdb \
  >/dev/null --batch --pid "$1" \
  -ex "dump memory $filename 0x$start 0x$stop"
